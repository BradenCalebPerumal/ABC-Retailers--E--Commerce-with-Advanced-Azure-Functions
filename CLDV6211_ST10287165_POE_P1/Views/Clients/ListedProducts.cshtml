@model IEnumerable<CLDV6211_ST10287165_POE_P1.Models.Product>
@{
    ViewData["Title"] = "Listed Products";
}

<meta name="viewport" content="width=device-width, initial-scale=1.0" />

<style>
    /* Container to manage cards layout */
    .card-container {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
        justify-content: center; /* Adjust alignment here */
    }

    /* Styling for each card */
    .card {
        flex: 0 1 320px; /* Adjusts the flex-basis and allows flex items to grow and shrink */
        margin: 15px;
        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        cursor: pointer;
        border-radius: 10px;
        overflow: hidden;
        position: relative;
        border: none;
        background: #fff;
    }


        .card:hover {
            transform: scale(1.05);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.6), 0 0 20px 10px #33AEFF; /* Outer glow effect */
        }

    .card-img-top {
        width: 100%;
        height: 280px;
        object-fit: cover;
    }

    .card-price-category {
        padding: 0.5rem;
        color: #333;
    }
</style>


@if (Model == null || !Model.Any())
{
    <p>No products available.</p>
}
else
{
    <div style="display: flex; flex-wrap: wrap; gap: 10px;">
        @foreach (var product in Model)
        {
            <div class="card" onclick="toggleCardDetails(this)">
                <img src="@product.ImageUrl" class="card-img-top" alt="@product.Name">
                <div class="card-price-category">
                    <p><strong>Price:</strong> R @product.Price</p>
                    <p><strong>Category:</strong> @product.Category</p>
                </div>
                <div class="card-body">
                    <h5 class="card-title">@product.Name</h5>
                    <p class="card-text">@product.Description</p>
                    <p class="card-text"><strong>Status:</strong> @product.InStock</p>
                    <form asp-controller="Home" asp-action="Privacy" method="post">
                        <input type="hidden" name="productId" value="@product.RowKey" />
                        <input type="hidden" name="quantity" value="1" />
                       
                    </form>
                </div>
            </div>
        }
    </div>
}

@section Scripts {
    <script>
        function toggleCardDetails(cardElement) {
            // Toggle the display of the card body on click
            var cardBody = cardElement.querySelector('.card-body');
            var isVisible = cardBody.style.display === 'block';
            cardBody.style.display = isVisible ? 'none' : 'block';

            // Toggle visibility for card text and button as well
            var cardTexts = cardElement.querySelectorAll('.card-text');
            var button = cardElement.querySelector('.btn-primary');
            cardTexts.forEach(text => text.style.display = isVisible ? 'none' : 'block');
            button.style.display = isVisible ? 'none' : 'block';
        }

        document.querySelectorAll('.btn-primary').forEach(button => {
            button.addEventListener('click', function (event) {
                event.stopPropagation(); // Prevent the toggle function from firing
            });
        });
    </script>
}
